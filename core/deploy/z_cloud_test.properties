flame.job.name=z_cloud_test
flame.metadata.url=http://hadoop.apache.org

flame.udfs=com.zyb.bigdata.rtsql.udf.ObjectReadUdfFactory

flame.tables=kafka_table,redis_source,redis_sink,q1,q2

#kafka 数据源表
flame.table.kafka_table.type=factory
flame.table.kafka_table.sql= create table kafka_table (`DATABASE` VARCHAR,`TABLE` VARCHAR,NEW_VALUES ROW<user_id STRING, trade_id STRING, course_id STRING>) with ('connector.type' = 'kafka','connector.version' = '0.11','connector.topic' = 'test_topic','connector.properties.0.key' = 'zookeeper.connect','connector.properties.0.value' = 'hostname:2181','connector.properties.1.key' = 'bootstrap.servers','connector.properties.1.value' = 'hostname:9092','connector.startup-mode' = 'latest-offset','update-mode' = 'append','format.type' = 'json','format.derive-schema' = 'true')
flame.table.kakfa_table.remote=false

# redis 维表
flame.table.redis_source.type=factory
flame.table.redis_source.sql=create table redis_source (user_id VARCHAR,ds_count INT) WITH ('update-mode' = 'append','connector.type' = 'redis','connector.bns' = 'xxxx','connector.password' = '123456','connector.filter' = 'false','connector.table' = 'cloud_test_002','connector.format' = 'hash','connector.number' = '1')
flame.table.redis_source.remote=false

# redis 结果表
flame.table.redis_sink.type=factory
flame.table.redis_sink.sql=create table redis_sink (user_id VARCHAR,ds_count INT) WITH ('update-mode' = 'append','connector.type' = 'redis','connector.bns' = 'xxxx','connector.password' = '123456','connector.filter' = 'false','connector.table' = 'cloud_test_001','connector.format' = 'hash','connector.number' = '1')
flame.table.redis_sink.remote=false

# 查询逻辑表
flame.table.q1.type=query
flame.table.q1.sql=select trade_table.user_id, redis_source.ds_count from (select user_id, trade_id, PROCTIME() as proctime from kafka_table) as trade_table join redis_source FOR SYSTEM_TIME AS OF trade_table.proctime on trade_table.user_id = redis_source.user_id
flame.table.q1.remote=false

# 将查询结果写入redis 表中的sql语句
flame.table.q2.type=factory
flame.table.q2.sql=insert into redis_sink select user_id, ds_count from q1
flame.table.q2.remote=false
